{"version":3,"sources":["map/CurrentLocation.js","map/map.js","yelp/business.js","yelp/businesslist.js","yelp/searchbar.js","yelp/yelp.js","App.js","serviceWorker.js","index.js"],"names":["mapStyles","position","width","height","CurrentLocation","props","initialCenter","lat","lng","state","currentLocation","prevProps","prevState","google","this","loadMap","recenterMap","map","current","maps","center","LatLng","panTo","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","setState","latitude","longitude","mapRef","refs","node","ReactDOM","findDOMNode","zoom","mapConfig","Object","assign","Map","children","React","Children","c","cloneElement","mapCenter","style","ref","renderChildren","Component","defaultProps","visible","MapContainer","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","onClose","className","businesses","business","index","key","id","label","toString","onClick","name","GoogleApiWrapper","apiKey","Business","src","imageSrc","alt","category","address","city","zipCode","rating","reviewCount","BusinessList","SearchBar","term","location","sortBy","sortByOptions","handleTermChange","bind","handleLocationChange","handleSearch","sortByOption","event","target","value","currlocation","geolocator","locateByIP","enableHighAccuracy","timeout","maximumWait","maximumAge","desiredAccuracy","fallbackToIP","err","console","log","searchYelp","preventDefault","keys","sortByOptionValue","getSortByClass","handleSortByChange","renderSortByOptions","placeholder","onChange","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","coordinates","App","class","Boolean","window","hostname","match","render","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.77dad6d2.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst mapStyles = {\r\n  map: {\r\n    position: 'absolute',\r\n    width: '67%',\r\n    height: '100%'\r\n  }\r\n};\r\n\r\nexport class CurrentLocation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        const { lat, lng } = this.props.initialCenter;\r\n        this.state = {\r\n          currentLocation: {\r\n            lat: lat,\r\n            lng: lng\r\n            \r\n          }\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.google !== this.props.google) {\r\n          this.loadMap();\r\n        }\r\n        if (prevState.currentLocation !== this.state.currentLocation) {\r\n          this.recenterMap();\r\n        }\r\n    }\r\n\r\n    recenterMap() {\r\n        const map = this.map;\r\n        const current = this.state.currentLocation;\r\n    \r\n        const google = this.props.google;\r\n        const maps = google.maps;\r\n    \r\n        if (map) {\r\n          let center = new maps.LatLng(current.lat, current.lng);\r\n          map.panTo(center);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.centerAroundCurrentLocation) {\r\n          if (navigator && navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(pos => {\r\n              const coords = pos.coords;\r\n              this.setState({\r\n                currentLocation: {\r\n                  lat: coords.latitude,\r\n                  lng: coords.longitude,\r\n                  \r\n                }\r\n              });\r\n            });\r\n          }\r\n        }\r\n        this.loadMap();\r\n    }\r\n\r\n    loadMap() {\r\n        if (this.props && this.props.google) {\r\n          // checks if google is available\r\n          const { google } = this.props;\r\n          const maps = google.maps;\r\n    \r\n          const mapRef = this.refs.map;\r\n    \r\n          // reference to the actual DOM element\r\n          const node = ReactDOM.findDOMNode(mapRef);\r\n    \r\n          let { zoom } = this.props;\r\n          const { lat, lng } = this.state.currentLocation;\r\n          const center = new maps.LatLng(lat, lng);\r\n          const mapConfig = Object.assign(\r\n            {},\r\n            {\r\n              center: center,\r\n              zoom: zoom\r\n            }\r\n          );\r\n    \r\n          // maps.Map() is constructor that instantiates the map\r\n          this.map = new maps.Map(node, mapConfig);\r\n        }\r\n    }\r\n\r\n    renderChildren() {\r\n        const { children } = this.props;\r\n    \r\n        if (!children) return;\r\n    \r\n        return React.Children.map(children, c => {\r\n          if (!c) return;\r\n          return React.cloneElement(c, {\r\n            map: this.map,\r\n            google: this.props.google,\r\n            mapCenter: this.state.currentLocation\r\n          });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const style = Object.assign({}, mapStyles.map);\r\n       return (\r\n         <div>\r\n           <div style={style} ref=\"map\">\r\n             Loading map...\r\n           </div>\r\n           {this.renderChildren()}\r\n         </div>\r\n       );\r\n    }\r\n\r\n}\r\nexport default CurrentLocation;\r\n\r\nCurrentLocation.defaultProps = {\r\n  zoom: 14,\r\n  initialCenter: {\r\n    lat: -1.2884,\r\n    lng: 36.8233\r\n  },\r\n  centerAroundCurrentLocation: false,\r\n  visible: true\r\n};\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\r\nimport CurrentLocation from './CurrentLocation.js';\r\nimport '../map/map.css';\r\n\r\nexport class MapContainer extends Component {\r\n\r\n  state = {\r\n    showingInfoWindow: false,\r\n    activeMarker: {},\r\n    selectedPlace: {}  \r\n  };\r\n\r\n  onMarkerClick = (props, marker, e) =>\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true\r\n    });\r\n\r\n  onClose = props => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null\r\n      });\r\n    }\r\n  };\r\n \r\n  render() {\r\n    return (\r\n\r\n      <div className=\"map\">\r\n      <CurrentLocation\r\n        centerAroundCurrentLocation\r\n        google={this.props.google}\r\n      >\r\n        \r\n        {this.props.businesses.map((business, index) => {\r\n          return <Marker key={index} id={index} position={{\r\n            lat: business.latitude,  \r\n            lng: business.longitude,\r\n            index: index\r\n          }}\r\n          label={(index +1).toString()}\r\n          \r\n          onClick={this.onMarkerClick} name={business.name} />\r\n         \r\n        })}\r\n        \r\n        <Marker label={'current location'} />\r\n        \r\n        <InfoWindow\r\n          marker={this.state.activeMarker}\r\n          visible={this.state.showingInfoWindow}\r\n          onClose={this.onClose}\r\n        >\r\n          <div>\r\n            <h4>{this.state.selectedPlace.name}</h4>\r\n          </div>\r\n        </InfoWindow>\r\n      </CurrentLocation>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: (\"AIzaSyD0OFCmyfBx48a1aTe2ki0g-EVxyIJpZOQ\")\r\n  })(MapContainer)\r\n  ","import React from 'react';\r\nimport '../yelp/business.css';\r\nimport CurrentLocation from '../map/CurrentLocation';\r\n\r\nclass Business extends React.Component {\r\n  render() {\r\n    return (\r\n       <div className=\"Business\">\r\n          <div className=\"image-container\">\r\n            <img src={this.props.business.imageSrc} alt={this.props.business.name}/>\r\n          </div>\r\n          \r\n          <h2>\r\n          {this.props.business.index}<br></br>\r\n          {this.props.business.name}\r\n          </h2>\r\n          <div className=\"Business-information\">\r\n            <div className=\"Business-address\">\r\n              Category: {this.props.business.category}\r\n              <p>{this.props.business.address}</p>\r\n              <p>{this.props.business.city}, {this.props.business.state} {this.props.business.zipCode}</p>\r\n              <p>rating: {this.props.business.rating}</p>\r\n              <p>number of reviews: {this.props.business.reviewCount}</p>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Business","import React from 'react'\r\nimport '../yelp/businesslist.css'\r\nimport Business from '../yelp/business.js'\r\n\r\nclass BusinessList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"BusinessList\">\r\n        {this.props.businesses.map((business => {\r\n          return <Business business={business} key={business.id} />;\r\n        }))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BusinessList","import React from 'react'\r\nimport '../yelp/searchbar.css'\r\nimport geolocator from 'geolocator'\r\nimport CurrentLocation from '../map/CurrentLocation';\r\n//import CurrentLocation from '../map/CurrentLocation';\r\n\r\nclass SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      term: '',\r\n      location: 'durham',\r\n      sortBy: 'best_match'\r\n    }\r\n\r\n    this.sortByOptions = {\r\n      \"Best Match\": \"best_match\",\r\n      \"Highest Rated\": \"rating\"\r\n      //\"Most Reviewed\": \"review_count\"\r\n    } \r\n\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n    this.handleLocationChange = this.handleLocationChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n  }\r\n\r\n  getSortByClass(sortByOption) {\r\n    if(this.state.sortBy === sortByOption) {\r\n      return 'active'\r\n    }\r\n    return ''\r\n  }\r\n\r\n\r\n  handleSortByChange(sortByOption) {\r\n    this.setState({\r\n      sortBy: sortByOption\r\n    })\r\n  }\r\n\r\n  handleTermChange(event) {\r\n    this.setState({\r\n      term: event.target.value\r\n    })\r\n  }\r\n\r\n  handleLocationChange(event) {\r\n    this.setState({\r\n      location: event.target.value\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    var currlocation\r\n    var options = {\r\n      enableHighAccuracy: true,\r\n\r\n      timeout: 5000,\r\n      maximumWait: 10000,     // max wait time for desired accuracy\r\n      maximumAge: 0,          // disable cache\r\n      desiredAccuracy: 30,    // meters\r\n      fallbackToIP: true,     // fallback to IP if Geolocation fails or rejected\r\n\r\n    };\r\n\r\n    geolocator.locateByIP(options, function (err, location) {\r\n      console.log(location.address.city);\r\n      currlocation=location.address.city\r\n    });\r\n\r\n    this.props.searchYelp('food',currlocation,'best_match')\r\n  }\r\n\r\n  handleSearch(event) {\r\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n    event.preventDefault();\r\n  }\r\n\r\n  renderSortByOptions(){\r\n\r\n    return Object.keys(this.sortByOptions).map((sortByOption) => {\r\n      let sortByOptionValue = this.sortByOptions[sortByOption];\r\n      return <li key={sortByOptionValue} className={this.getSortByClass(sortByOptionValue)} onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>{sortByOption}</li>;\r\n    })\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"SearchBar\">\r\n        <div className=\"SearchBar-sort-options\">\r\n          <ul>\r\n            {this.renderSortByOptions()}\r\n          </ul>\r\n        </div>\r\n        <div className=\"SearchBar-fields\">\r\n          <input placeholder=\"Search Category\" onChange={this.handleTermChange}/>\r\n          <input placeholder=\"Where?\" onChange={this.handleLocationChange}/>\r\n        </div>\r\n        <div className=\"SearchBar-submit\" onClick={this.handleSearch}>\r\n          <a>Search</a>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBar","\r\nconst apiKey = 'tKZBkYD-HSCccDMOI3mssJ8KPrsWJlT7IWh5NoVLKLIKI22Vsn6xH2N5QG0jBp5RhJ31zFIv_J_qTSb7u6w8Fq2RQ5fEmZ9v1fkVRTwKSnUo529qMs0ECW-YhKBUXnYx';\r\nconst Yelp = {\r\n  search(term, location, sortBy) {\r\n    return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${apiKey}`\r\n      }\r\n    })\r\n    .then(response => response.json())\r\n    .then((jsonResponse) => {\r\n      if(jsonResponse.businesses){\r\n        return jsonResponse.businesses.map((business, index) => {\r\n          return {\r\n            id: business.id,\r\n            imageSrc: business.image_url,\r\n            name: business.name,\r\n            address: business.location.address1,\r\n            city: business.location.city,\r\n            state: business.location.state,\r\n            zipCode: business.location.zip_code,\r\n            category: business.categories[0].title,\r\n            rating: business.rating,\r\n            reviewCount: business.review_count,\r\n            latitude: business.coordinates.latitude,\r\n            longitude: business.coordinates.longitude,\r\n            index: (index+1)\r\n          }\r\n\r\n        })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport default Yelp;","import React, { Component } from 'react';\nimport './App.css';\nimport MapContainer from './map/map.js';\nimport BusinessList from './yelp/businesslist.js';\nimport SearchBar from './yelp/searchbar.js';\nimport Yelp from './yelp/yelp.js';\n\nexport class App extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: []\n    };\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy)\n    .then((businesses) => {\n      this.setState({\n        businesses: businesses\n      })\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <h1> Food Finder</h1>  \n\n        <p className=\"App-intro\">\n          Search for the perfect restaurant!\n        </p>\n       \n        <div>\n        <SearchBar searchYelp={this.searchYelp}/>\n        </div>\n\n        <div class=\"row\"> \n          <div class=\"column left\">\n          <BusinessList businesses={this.state.businesses}/>\n          </div>\n          <div class=\"column right\">\n          <MapContainer businesses={this.state.businesses}/>\n          </div>\n        </div>\n        \n       \n      </div>\n    );\n  }\n}\n\n\nexport default (App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}